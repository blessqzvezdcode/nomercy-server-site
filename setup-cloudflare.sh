#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Cloudflare —á–µ—Ä–µ–∑ API
# –¢—Ä–µ–±—É–µ—Ç: CLOUDFLARE_API_TOKEN –∏ ZONE_ID

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
    error "CLOUDFLARE_API_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å: https://dash.cloudflare.com/profile/api-tokens"
    exit 1
fi

if [ -z "$ZONE_ID" ]; then
    error "ZONE_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–ù–∞–π–¥–∏—Ç–µ Zone ID –≤ –ø–∞–Ω–µ–ª–∏ Cloudflare –¥–ª—è –¥–æ–º–µ–Ω–∞ nmercy.online"
    exit 1
fi

DOMAIN="nmercy.online"
SERVER_IP="90.156.229.233"

log "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Cloudflare –¥–ª—è $DOMAIN..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
cf_api() {
    local method=$1
    local endpoint=$2
    local data=$3
    
    curl -s -X $method "https://api.cloudflare.com/client/v4$endpoint" \
        -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
        -H "Content-Type: application/json" \
        ${data:+-d "$data"}
}

# 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS –∑–∞–ø–∏—Å–µ–π
log "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS –∑–∞–ø–∏—Å–µ–π..."

# A –∑–∞–ø–∏—Å—å –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
DNS_RECORD=$(cf_api GET "/zones/$ZONE_ID/dns_records?name=$DOMAIN&type=A")
if echo "$DNS_RECORD" | grep -q '"count":0'; then
    log "–°–æ–∑–¥–∞–Ω–∏–µ A –∑–∞–ø–∏—Å–∏ –¥–ª—è $DOMAIN..."
    cf_api POST "/zones/$ZONE_ID/dns_records" '{
        "type": "A",
        "name": "'$DOMAIN'",
        "content": "'$SERVER_IP'",
        "proxied": true,
        "ttl": 1
    }'
    success "A –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞"
else
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ A –∑–∞–ø–∏—Å–∏ –¥–ª—è $DOMAIN..."
    RECORD_ID=$(echo "$DNS_RECORD" | grep -o '"id":"[^"]*"' | head -1 | cut -d'"' -f4)
    cf_api PUT "/zones/$ZONE_ID/dns_records/$RECORD_ID" '{
        "type": "A",
        "name": "'$DOMAIN'",
        "content": "'$SERVER_IP'",
        "proxied": true,
        "ttl": 1
    }'
    success "A –∑–∞–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
fi

# A –∑–∞–ø–∏—Å—å –¥–ª—è www
WWW_RECORD=$(cf_api GET "/zones/$ZONE_ID/dns_records?name=www.$DOMAIN&type=A")
if echo "$WWW_RECORD" | grep -q '"count":0'; then
    log "–°–æ–∑–¥–∞–Ω–∏–µ A –∑–∞–ø–∏—Å–∏ –¥–ª—è www.$DOMAIN..."
    cf_api POST "/zones/$ZONE_ID/dns_records" '{
        "type": "A",
        "name": "www.'$DOMAIN'",
        "content": "'$SERVER_IP'",
        "proxied": true,
        "ttl": 1
    }'
    success "A –∑–∞–ø–∏—Å—å –¥–ª—è www —Å–æ–∑–¥–∞–Ω–∞"
fi

# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL
log "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL..."
cf_api PATCH "/zones/$ZONE_ID/settings/ssl" '{"value": "full"}'
cf_api PATCH "/zones/$ZONE_ID/settings/min_tls_version" '{"value": "1.2"}'
cf_api PATCH "/zones/$ZONE_ID/settings/hsts" '{
    "value": {
        "enabled": true,
        "max_age": 31536000,
        "include_subdomains": true,
        "preload": true
    }
}'
success "SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
log "üõ°Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
cf_api PATCH "/zones/$ZONE_ID/settings/security_level" '{"value": "medium"}'
cf_api PATCH "/zones/$ZONE_ID/settings/browser_check" '{"value": "on"}'
success "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

# 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
log "‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
cf_api PATCH "/zones/$ZONE_ID/settings/cache_level" '{"value": "aggressive"}'
cf_api PATCH "/zones/$ZONE_ID/settings/minify" '{
    "value": {
        "css": "on",
        "html": "on",
        "js": "on"
    }
}'
cf_api PATCH "/zones/$ZONE_ID/settings/brotli" '{"value": "on"}'
success "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

# 5. –°–æ–∑–¥–∞–Ω–∏–µ Page Rules
log "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ Page Rules..."

# API bypass rule
cf_api POST "/zones/$ZONE_ID/pagerules" '{
    "targets": [{"target": "url", "constraint": {"operator": "matches", "value": "'$DOMAIN'/api/*"}}],
    "actions": [
        {"id": "cache_level", "value": "bypass"},
        {"id": "security_level", "value": "high"}
    ],
    "priority": 1,
    "status": "active"
}'

# Admin bypass rule
cf_api POST "/zones/$ZONE_ID/pagerules" '{
    "targets": [{"target": "url", "constraint": {"operator": "matches", "value": "'$DOMAIN'/admin/*"}}],
    "actions": [
        {"id": "cache_level", "value": "bypass"},
        {"id": "security_level", "value": "high"},
        {"id": "browser_check", "value": "on"}
    ],
    "priority": 2,
    "status": "active"
}'

# Static files caching
cf_api POST "/zones/$ZONE_ID/pagerules" '{
    "targets": [{"target": "url", "constraint": {"operator": "matches", "value": "'$DOMAIN'/*.css"}}],
    "actions": [
        {"id": "cache_level", "value": "cache_everything"},
        {"id": "edge_cache_ttl", "value": 2592000}
    ],
    "priority": 3,
    "status": "active"
}'

cf_api POST "/zones/$ZONE_ID/pagerules" '{
    "targets": [{"target": "url", "constraint": {"operator": "matches", "value": "'$DOMAIN'/*.js"}}],
    "actions": [
        {"id": "cache_level", "value": "cache_everything"},
        {"id": "edge_cache_ttl", "value": 2592000}
    ],
    "priority": 4,
    "status": "active"
}'

success "Page Rules —Å–æ–∑–¥–∞–Ω—ã"

log "üéâ Cloudflare –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
log "üåê –í–∞—à —Å–∞–π—Ç —Ç–µ–ø–µ—Ä—å –∑–∞—â–∏—â–µ–Ω Cloudflare"
log "üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: https://dash.cloudflare.com"

warning "–í–∞–∂–Ω–æ: –û–±–Ω–æ–≤–∏—Ç–µ nameservers —É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–º–µ–Ω–∞ –Ω–∞ Cloudflare nameservers"

