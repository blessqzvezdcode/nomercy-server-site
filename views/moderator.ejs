<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>–ü–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ - NoMercy</title>
<link rel="stylesheet" href="/css/base.css">
<link rel="stylesheet" href="/css/admin.css">
</head>
<body>
    <nav>
  <a href="/" class="brand">NoMercy</a>
  <div class="nav-buttons">
    <% if (user) { %>
      <div class="dropdown">
        <button class="dropdown-toggle">
          <span>–ú–µ–Ω—é</span>
        </button>
        <div class="dropdown-menu">
          <a href="/profile/<%= user.id %>" class="dropdown-item">üë§ –ü—Ä–æ—Ñ–∏–ª—å</a>
          <a href="/market" class="dropdown-item">üõí –ú–∞—Ä–∫–µ—Ç</a>
          <a href="/cards" class="dropdown-item">üÉè –ö–æ–ª–ª–µ–∫—Ü–∏—è</a>
          <a href="/news" class="dropdown-item">üì∞ –ù–æ–≤–æ—Å—Ç–∏</a>
          <a href="/quests" class="dropdown-item">üìã –ö–≤–µ—Å—Ç—ã</a>
          <a href="/games" class="dropdown-item">üé∞ –ú–∏–Ω–∏-–ò–≥—Ä—ã</a>
          <a href="/achievements" class="dropdown-item">üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</a>
          <a href="/faq" class="dropdown-item">‚ùì FAQ</a>
          <div class="dropdown-divider"></div>
          <a href="/logout" class="dropdown-item">üö™ –í—ã–π—Ç–∏</a>
        </div>
      </div>
    <% } else { %>
      <a href="/auth/discord" class="btn">–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Discord</a>
    <% } %>
  </div>
</nav>
       <% if (user) { %><%- include('_messages') %><% } %>

<div class="container">
  <h2>–ü–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞</h2>
  
  <!-- Success/Error Messages -->
  <% if (typeof message !== 'undefined' && message) { %>
    <div class="admin-message success">
      <span class="message-icon">‚úÖ</span>
      <span><%= message %></span>
    </div>
  <% } %>
  
  <!-- Moderator Navigation Tabs -->
  <div class="admin-tabs">
    <button class="tab-btn active" onclick="showTab('overview')">–û–±–∑–æ—Ä</button>
    <button class="tab-btn" onclick="showTab('pending')">–û–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</button>
    <button class="tab-btn" onclick="showTab('news')">–ù–æ–≤–æ—Å—Ç–∏</button>
    <button class="tab-btn" onclick="showTab('listings')">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ—Ç–∞–º–∏</button>
  </div>

  <!-- Overview Tab -->
  <div id="overview-tab" class="tab-content active">
    <h3>–û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã</h3>
    
    <div class="card">
      <div class="card-header">
        <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
      </div>
      <div class="card-content">
        <div class="stats-grid">
          <div class="stat-item">
            <div class="stat-value" id="total-users">-</div>
            <div class="stat-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
          </div>
          <div class="stat-item">
            <div class="stat-value" id="total-listings">-</div>
            <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ª–æ—Ç–æ–≤</div>
          </div>
          <div class="stat-item">
            <div class="stat-value" id="pending-transactions">-</div>
            <div class="stat-label">–û–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Pending Transactions Tab -->
  <div id="pending-tab" class="tab-content">
    <h3>–°–¥–µ–ª–∫–∏, –æ–∂–∏–¥–∞—é—â–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</h3>
    
    <div class="card">
      <div class="card-header">
        <h3>‚è≥ –û–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</h3>
      </div>
      <div class="card-content">
        <div id="pending-transactions">
          <div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...</div>
        </div>
      </div>
    </div>
  </div>

  <!-- News Management Tab -->
  <div id="news-tab" class="tab-content">
    <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏</h3>
    
    <div class="card">
      <div class="card-header">
        <h3>‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å</h3>
      </div>
      <div class="card-content">
        <form action="/moderator/news/add" method="POST" class="admin-form">
          <div class="form-group">
            <label>–ó–∞–≥–æ–ª–æ–≤–æ–∫</label>
            <input name="title" placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏" required>
          </div>
          <div class="form-group">
            <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
            <select name="category" required>
              <option value="general">–û–±—â–∏–µ</option>
              <option value="updates">–û–±–Ω–æ–≤–ª–µ–Ω–∏—è</option>
              <option value="events">–°–æ–±—ã—Ç–∏—è</option>
              <option value="maintenance">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã</option>
            </select>
          </div>
          <div class="form-group">
            <label>–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</label>
            <textarea name="summary" placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏" required></textarea>
          </div>
          <div class="form-group">
            <label>–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç</label>
            <textarea name="content" placeholder="–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏" required></textarea>
          </div>
          <button class="btn" type="submit">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å</button>
        </form>
      </div>
    </div>

    <div class="card">
      <div class="card-header">
        <h3>üì∞ –°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π</h3>
      </div>
      <div class="card-content">
        <div id="news-list">
          <div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π...</div>
        </div>
      </div>
    </div>
  </div>

  <!-- Listings Management Tab -->
  <div id="listings-tab" class="tab-content">
    <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ—Ç–∞–º–∏</h3>
    
    <div class="card">
      <div class="card-header">
        <h3>üìã –í—Å–µ –ª–æ—Ç—ã</h3>
      </div>
      <div class="card-content">
        <div id="all-listings">
          <div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ—Ç–æ–≤...</div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
function showTab(tabName) {
  // Hide all tabs
  const tabs = document.querySelectorAll('.tab-content');
  tabs.forEach(tab => tab.classList.remove('active'));
  
  // Remove active class from all buttons
  const buttons = document.querySelectorAll('.tab-btn');
  buttons.forEach(btn => btn.classList.remove('active'));
  
  // Show selected tab
  document.getElementById(tabName + '-tab').classList.add('active');
  
  // Add active class to clicked button
  event.target.classList.add('active');
  
  // Load data for specific tabs
  if (tabName === 'pending') {
    loadPendingTransactions();
  } else if (tabName === 'listings') {
    loadAllListings();
  } else if (tabName === 'news') {
    loadNews();
  }
}

// Load pending transactions
async function loadPendingTransactions() {
  try {
    const response = await fetch('/api/admin/pending-transactions');
    const data = await response.json();
    
    const container = document.getElementById('pending-transactions');
    
    if (data.success && data.transactions.length > 0) {
      container.innerHTML = '';
      data.transactions.forEach(transaction => {
        const transactionElement = document.createElement('div');
        transactionElement.className = 'transaction-item';
        transactionElement.innerHTML = `
          <div class="transaction-info">
            <h4>${transaction.title}</h4>
            <p>–ü—Ä–æ–¥–∞–≤–µ—Ü: ${transaction.ownerName}</p>
            <p>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${transaction.buyerName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
            <p>–¶–µ–Ω–∞: ${transaction.price} NMCoin</p>
            <p>–°—Ç–∞—Ç—É—Å: ${transaction.status}</p>
            <p>–°–æ–∑–¥–∞–Ω–æ: ${new Date(transaction.createdAt).toLocaleString()}</p>
          </div>
          <div class="transaction-actions">
            <button class="btn success" onclick="approveTransaction('${transaction.id}')">
              ‚úÖ –û–¥–æ–±—Ä–∏—Ç—å
            </button>
            <button class="btn danger" onclick="rejectTransaction('${transaction.id}')">
              ‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å
            </button>
          </div>
        `;
        container.appendChild(transactionElement);
      });
    } else {
      container.innerHTML = '<div class="empty-state"><span class="empty-icon">‚úÖ</span><p>–ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</p></div>';
    }
  } catch (error) {
    console.error('Error loading pending transactions:', error);
    document.getElementById('pending-transactions').innerHTML = 
      '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</div>';
  }
}

// Approve transaction
async function approveTransaction(transactionId) {
  if (!confirm('–û–¥–æ–±—Ä–∏—Ç—å —ç—Ç—É —Å–¥–µ–ª–∫—É?')) {
    return;
  }
  
  try {
    const response = await fetch(`/api/admin/approve-transaction/${transactionId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    
    if (data.success) {
      alert('–°–¥–µ–ª–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!');
      loadPendingTransactions();
    } else {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    }
  } catch (error) {
    console.error('Error approving transaction:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏: ' + error.message);
  }
}

// Reject transaction
async function rejectTransaction(transactionId) {
  const reason = prompt('–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:');
  if (!reason) {
    return;
  }
  
  try {
    const response = await fetch(`/api/admin/reject-transaction/${transactionId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ reason: reason })
    });
    
    const data = await response.json();
    
    if (data.success) {
      alert('–°–¥–µ–ª–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!');
      loadPendingTransactions();
    } else {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    }
  } catch (error) {
    console.error('Error rejecting transaction:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏: ' + error.message);
  }
}

// Load all listings for moderator management
async function loadAllListings() {
  try {
    const response = await fetch('/api/market/listings');
    const data = await response.json();
    
    const container = document.getElementById('all-listings');
    
    if (data.success && data.listings.length > 0) {
      container.innerHTML = '';
      data.listings.forEach(listing => {
        const listingElement = document.createElement('div');
        listingElement.className = 'listing-item';
        listingElement.innerHTML = `
          <div class="listing-info">
            <h4>${listing.title}</h4>
            <p>${listing.description}</p>
            <div class="listing-meta">
              <span class="listing-price">${listing.price} NMCoin</span>
              <span class="listing-type">${listing.type === 'auction' ? '–ê—É–∫—Ü–∏–æ–Ω' : '–ü—Ä—è–º–∞—è –ø—Ä–æ–¥–∞–∂–∞'}</span>
              <span class="listing-status status-${listing.status}">${getStatusText(listing.status)}</span>
              <span class="listing-owner">–í–ª–∞–¥–µ–ª–µ—Ü: ${listing.ownerName}</span>
            </div>
            <div class="listing-details">
              <span>–°–æ–∑–¥–∞–Ω–æ: ${new Date(listing.createdAt).toLocaleString()}</span>
              ${listing.buyerName ? `<span>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${listing.buyerName}</span>` : ''}
            </div>
          </div>
          <div class="listing-actions">
            <button class="btn danger" onclick="adminDeleteListing('${listing.id}')">
              üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ª–æ—Ç
            </button>
            ${listing.status === 'active' ? `
              <button class="btn warning" onclick="closeListing('${listing.id}')">
                üîí –ó–∞–∫—Ä—ã—Ç—å –ª–æ—Ç
              </button>
            ` : ''}
          </div>
        `;
        container.appendChild(listingElement);
      });
    } else {
      container.innerHTML = '<div class="empty-state"><span class="empty-icon">üì¶</span><p>–ù–µ—Ç –ª–æ—Ç–æ–≤</p></div>';
    }
  } catch (error) {
    console.error('Error loading listings:', error);
    document.getElementById('all-listings').innerHTML = 
      '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ—Ç–æ–≤</div>';
  }
}

// Admin delete listing
async function adminDeleteListing(listingId) {
  if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –ª–æ—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!')) {
    return;
  }
  
  try {
    const response = await fetch(`/api/admin/delete-listing/${listingId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    
    if (data.success) {
      alert('–õ–æ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');
      loadAllListings();
    } else {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–æ—Ç–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    }
  } catch (error) {
    console.error('Error deleting listing:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–æ—Ç–∞: ' + error.message);
  }
}

// Close listing
async function closeListing(listingId) {
  if (!confirm('–ó–∞–∫—Ä—ã—Ç—å —ç—Ç–æ—Ç –ª–æ—Ç? –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–≥—É—Ç –µ–≥–æ –∫—É–ø–∏—Ç—å.')) {
    return;
  }
  
  try {
    const response = await fetch(`/api/admin/close-listing/${listingId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    
    if (data.success) {
      alert('–õ–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç!');
      loadAllListings();
    } else {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ª–æ—Ç–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    }
  } catch (error) {
    console.error('Error closing listing:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ª–æ—Ç–∞: ' + error.message);
  }
}

// Load news
async function loadNews() {
  try {
    const response = await fetch('/api/moderator/news');
    const data = await response.json();
    
    const container = document.getElementById('news-list');
    
    if (data.success && data.news.length > 0) {
      container.innerHTML = '';
      data.news.forEach(article => {
        const newsElement = document.createElement('div');
        newsElement.className = 'news-item';
        newsElement.innerHTML = `
          <div class="news-info">
            <h4>${article.title}</h4>
            <p>${article.summary}</p>
            <div class="news-meta">
              <span class="news-category">${article.category}</span>
              <span class="news-date">${new Date(article.createdAt).toLocaleString()}</span>
            </div>
          </div>
          <div class="news-actions">
            <button class="btn danger" onclick="deleteNews('${article.id}')">
              üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
            </button>
          </div>
        `;
        container.appendChild(newsElement);
      });
    } else {
      container.innerHTML = '<div class="empty-state"><span class="empty-icon">üì∞</span><p>–ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π</p></div>';
    }
  } catch (error) {
    console.error('Error loading news:', error);
    document.getElementById('news-list').innerHTML = 
      '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π</div>';
  }
}

// Delete news
async function deleteNews(newsId) {
  if (!confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –Ω–æ–≤–æ—Å—Ç—å?')) {
    return;
  }
  
  try {
    const response = await fetch(`/api/moderator/news/delete/${newsId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    
    if (data.success) {
      alert('–ù–æ–≤–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∞!');
      loadNews();
    } else {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    }
  } catch (error) {
    console.error('Error deleting news:', error);
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏: ' + error.message);
  }
}

// Get status text
function getStatusText(status) {
  const statusMap = {
    'active': '–ê–∫—Ç–∏–≤–µ–Ω',
    'sold': '–ü—Ä–æ–¥–∞–Ω',
    'pending_guarantor': '–û–∂–∏–¥–∞–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∞',
    'closed': '–ó–∞–∫—Ä—ã—Ç'
  };
  return statusMap[status] || status;
}

// Auto-show tab based on URL parameter
document.addEventListener('DOMContentLoaded', function() {
  const urlParams = new URLSearchParams(window.location.search);
  const tab = urlParams.get('tab');
  if (tab) {
    showTab(tab);
  }
  
  // Load data for specific tabs
  if (tab === 'pending') {
    loadPendingTransactions();
  } else if (tab === 'listings') {
    loadAllListings();
  } else if (tab === 'news') {
    loadNews();
  }
});
</script>
<script src="/js/dropdown.js"></script>
</body></html>

